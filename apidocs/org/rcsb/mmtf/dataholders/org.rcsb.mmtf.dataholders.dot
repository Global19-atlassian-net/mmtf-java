#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.rcsb.mmtf.dataholders.MmtfStructure
	c0 [label=<<table title="org.rcsb.mmtf.dataholders.MmtfStructure" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MmtfStructure.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MmtfStructure </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + COORD_DIVIDER : int </td></tr>
<tr><td align="left" balign="left"> + OCCUPANCY_BFACTOR_DIVIDER : int </td></tr>
<tr><td align="left" balign="left"> + UNAVAILABLE_R_VALUE : float </td></tr>
<tr><td align="left" balign="left"> + UNAVAILABLE_RESOLUTION_VALUE : float </td></tr>
<tr><td align="left" balign="left"> + UNAVAILABLE_CHAR_VALUE : char </td></tr>
<tr><td align="left" balign="left"> + CHAIN_LENGTH : int </td></tr>
<tr><td align="left" balign="left"> + VERSION : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MmtfStructure() </td></tr>
<tr><td align="left" balign="left"> + getResolution() : Float </td></tr>
<tr><td align="left" balign="left"> + setResolution(resolution : float) </td></tr>
<tr><td align="left" balign="left"> + getrFree() : Float </td></tr>
<tr><td align="left" balign="left"> + setrFree(rFree : float) </td></tr>
<tr><td align="left" balign="left"> + getrWork() : Float </td></tr>
<tr><td align="left" balign="left"> + setrWork(rWork : float) </td></tr>
<tr><td align="left" balign="left"> + getSpaceGroup() : String </td></tr>
<tr><td align="left" balign="left"> + setSpaceGroup(inputSpaceGroup : String) </td></tr>
<tr><td align="left" balign="left"> + getUnitCell() : float[] </td></tr>
<tr><td align="left" balign="left"> + setUnitCell(inputUnitCell : float[]) </td></tr>
<tr><td align="left" balign="left"> + getGroupIdList() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setGroupIdList(inputGroupNumList : byte[]) </td></tr>
<tr><td align="left" balign="left"> + getAltLocList() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setAltLocList(inputAltLocList : byte[]) </td></tr>
<tr><td align="left" balign="left"> + getBioAssemblyList() : List&lt;BioAssemblyData&gt; </td></tr>
<tr><td align="left" balign="left"> + getChainNameList() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setChainNameList(inputChainList : byte[]) </td></tr>
<tr><td align="left" balign="left"> + setBioAssemblyList(inputBioAssembly : List&lt;BioAssemblyData&gt;) </td></tr>
<tr><td align="left" balign="left"> + getNumAtoms() : int </td></tr>
<tr><td align="left" balign="left"> + setNumAtoms(inputNumAtoms : int) </td></tr>
<tr><td align="left" balign="left"> + getOccupancyList() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setOccupancyList(inputOccupancyList : byte[]) </td></tr>
<tr><td align="left" balign="left"> + getInsCodeList() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setInsCodeList(inputInsertionCodeList : byte[]) </td></tr>
<tr><td align="left" balign="left"> + getGroupList() : Group[] </td></tr>
<tr><td align="left" balign="left"> + setGroupList(inputGroupMap : Group[]) </td></tr>
<tr><td align="left" balign="left"> + getSecStructList() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setSecStructList(secStruct : byte[]) </td></tr>
<tr><td align="left" balign="left"> + getGroupTypeList() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setGroupTypeList(resOrder : byte[]) </td></tr>
<tr><td align="left" balign="left"> + getAtomIdList() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setAtomIdList(inputAtomIdList : byte[]) </td></tr>
<tr><td align="left" balign="left"> + getTitle() : String </td></tr>
<tr><td align="left" balign="left"> + setTitle(inputTitle : String) </td></tr>
<tr><td align="left" balign="left"> + getStructureId() : String </td></tr>
<tr><td align="left" balign="left"> + setStructureId(inputId : String) </td></tr>
<tr><td align="left" balign="left"> + getMmtfProducer() : String </td></tr>
<tr><td align="left" balign="left"> + setMmtfProducer(inputMmtfProducer : String) </td></tr>
<tr><td align="left" balign="left"> + getMmtfVersion() : String </td></tr>
<tr><td align="left" balign="left"> + setMmtfVersion(inputMmtfVersion : String) </td></tr>
<tr><td align="left" balign="left"> + getNumBonds() : int </td></tr>
<tr><td align="left" balign="left"> + setNumBonds(inputNumBonds : int) </td></tr>
<tr><td align="left" balign="left"> + getBondAtomList() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setBondAtomList(inputBondAtomList : byte[]) </td></tr>
<tr><td align="left" balign="left"> + getBondOrderList() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setBondOrderList(inputBondOrderList : byte[]) </td></tr>
<tr><td align="left" balign="left"> + getChainsPerModel() : int[] </td></tr>
<tr><td align="left" balign="left"> + setChainsPerModel(inputInternalChainsPerModel : int[]) </td></tr>
<tr><td align="left" balign="left"> + getGroupsPerChain() : int[] </td></tr>
<tr><td align="left" balign="left"> + setGroupsPerChain(inputGroupsPerChain : int[]) </td></tr>
<tr><td align="left" balign="left"> + getChainIdList() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setChainIdList(inputInternalChainList : byte[]) </td></tr>
<tr><td align="left" balign="left"> + getExperimentalMethods() : String[] </td></tr>
<tr><td align="left" balign="left"> + setExperimentalMethods(experimentalMethods : String[]) </td></tr>
<tr><td align="left" balign="left"> + getSequenceIndexList() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setSequenceIndexList(seqResGroupIds : byte[]) </td></tr>
<tr><td align="left" balign="left"> + getEntityList() : Entity[] </td></tr>
<tr><td align="left" balign="left"> + setEntityList(entityList : Entity[]) </td></tr>
<tr><td align="left" balign="left"> + getDepositionDate() : String </td></tr>
<tr><td align="left" balign="left"> + setDepositionDate(depositionDate : String) </td></tr>
<tr><td align="left" balign="left"> + getReleaseDate() : String </td></tr>
<tr><td align="left" balign="left"> + setReleaseDate(releaseDate : String) </td></tr>
<tr><td align="left" balign="left"> + getxCoordList() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setxCoordList(xCoords : byte[]) </td></tr>
<tr><td align="left" balign="left"> + getyCoordList() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setyCoordList(yCoords : byte[]) </td></tr>
<tr><td align="left" balign="left"> + getzCoordList() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setzCoordList(zCoords : byte[]) </td></tr>
<tr><td align="left" balign="left"> + getbFactorList() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setbFactorList(bFactors : byte[]) </td></tr>
<tr><td align="left" balign="left"> + getNumGroups() : int </td></tr>
<tr><td align="left" balign="left"> + setNumGroups(numGroups : int) </td></tr>
<tr><td align="left" balign="left"> + getNumChains() : int </td></tr>
<tr><td align="left" balign="left"> + setNumChains(numChains : int) </td></tr>
<tr><td align="left" balign="left"> + getNumModels() : int </td></tr>
<tr><td align="left" balign="left"> + setNumModels(numModels : int) </td></tr>
<tr><td align="left" balign="left"> + getNcsOperatorList() : double[][] </td></tr>
<tr><td align="left" balign="left"> + setNcsOperatorList(ncsOperatorList : double[][]) </td></tr>
		</table></td></tr>
		</table>>, URL="./MmtfStructure.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.rcsb.mmtf.dataholders.Group
	c1 [label=<<table title="org.rcsb.mmtf.dataholders.Group" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Group.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Group </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Group() </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getAtomNameList() : String[] </td></tr>
<tr><td align="left" balign="left"> + setAtomNameList(inputAtomInfo : String[]) </td></tr>
<tr><td align="left" balign="left"> + getBondOrderList() : int[] </td></tr>
<tr><td align="left" balign="left"> + setBondOrderList(inputBondOrders : int[]) </td></tr>
<tr><td align="left" balign="left"> + getBondAtomList() : int[] </td></tr>
<tr><td align="left" balign="left"> + setBondAtomList(inputBondIndices : int[]) </td></tr>
<tr><td align="left" balign="left"> + getGroupName() : String </td></tr>
<tr><td align="left" balign="left"> + setGroupName(resName : String) </td></tr>
<tr><td align="left" balign="left"> + getFormalChargeList() : int[] </td></tr>
<tr><td align="left" balign="left"> + setFormalChargeList(inputAtomCharges : int[]) </td></tr>
<tr><td align="left" balign="left"> + getSingleLetterCode() : char </td></tr>
<tr><td align="left" balign="left"> + setSingleLetterCode(inputSingleLetterCode : char) </td></tr>
<tr><td align="left" balign="left"> + getChemCompType() : String </td></tr>
<tr><td align="left" balign="left"> + setChemCompType(groupType : String) </td></tr>
<tr><td align="left" balign="left"> + getElementList() : String[] </td></tr>
<tr><td align="left" balign="left"> + setElementList(elementList : String[]) </td></tr>
		</table></td></tr>
		</table>>, URL="./Group.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.rcsb.mmtf.dataholders.Entity
	c2 [label=<<table title="org.rcsb.mmtf.dataholders.Entity" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Entity.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Entity </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Entity() </td></tr>
<tr><td align="left" balign="left"> + getDescription() : String </td></tr>
<tr><td align="left" balign="left"> + setDescription(description : String) </td></tr>
<tr><td align="left" balign="left"> + getType() : String </td></tr>
<tr><td align="left" balign="left"> + setType(type : String) </td></tr>
<tr><td align="left" balign="left"> + getChainIndexList() : int[] </td></tr>
<tr><td align="left" balign="left"> + setChainIndexList(chainIndexList : int[]) </td></tr>
<tr><td align="left" balign="left"> + getSequence() : String </td></tr>
<tr><td align="left" balign="left"> + setSequence(entitySequence : String) </td></tr>
		</table></td></tr>
		</table>>, URL="./Entity.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.rcsb.mmtf.dataholders.DsspType
	c3 [label=<<table title="org.rcsb.mmtf.dataholders.DsspType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DsspType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> DsspType </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> PI_HELIX </td></tr>
<tr><td align="left" balign="left"> BEND </td></tr>
<tr><td align="left" balign="left"> ALPHA_HELIX </td></tr>
<tr><td align="left" balign="left"> EXTENDED </td></tr>
<tr><td align="left" balign="left"> HELIX_3_10 </td></tr>
<tr><td align="left" balign="left"> BRIDGE </td></tr>
<tr><td align="left" balign="left"> TURN </td></tr>
<tr><td align="left" balign="left"> COIL </td></tr>
<tr><td align="left" balign="left"> NULL_ENTRY </td></tr>
		</table></td></tr>
		</table>>, URL="./DsspType.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.rcsb.mmtf.dataholders.BioAssemblyTransformation
	c4 [label=<<table title="org.rcsb.mmtf.dataholders.BioAssemblyTransformation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BioAssemblyTransformation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BioAssemblyTransformation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BioAssemblyTransformation() </td></tr>
<tr><td align="left" balign="left"> + getMatrix() : double[] </td></tr>
<tr><td align="left" balign="left"> + setMatrix(transformation : double[]) </td></tr>
<tr><td align="left" balign="left"> + getChainIndexList() : int[] </td></tr>
<tr><td align="left" balign="left"> + setChainIndexList(inputChainId : int[]) </td></tr>
		</table></td></tr>
		</table>>, URL="./BioAssemblyTransformation.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.rcsb.mmtf.dataholders.BioAssemblyData
	c5 [label=<<table title="org.rcsb.mmtf.dataholders.BioAssemblyData" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BioAssemblyData.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BioAssemblyData </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BioAssemblyData(name : String) </td></tr>
<tr><td align="left" balign="left"> + BioAssemblyData() </td></tr>
<tr><td align="left" balign="left"> + getTransformList() : List&lt;BioAssemblyTransformation&gt; </td></tr>
<tr><td align="left" balign="left"> + setTransformList(inputTransforms : List&lt;BioAssemblyTransformation&gt;) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + setName(name : String) </td></tr>
		</table></td></tr>
		</table>>, URL="./BioAssemblyData.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

