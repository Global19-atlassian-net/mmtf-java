#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.rcsb.mmtf.codec.ArrayConverters
	c337 [label=<<table title="org.rcsb.mmtf.codec.ArrayConverters" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./ArrayConverters.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ArrayConverters </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ArrayConverters() </td></tr>
<tr><td align="left" balign="left"> + decodeChainList(currentChainList : byte[], length : int) : String[] </td></tr>
<tr><td align="left" balign="left"> + convertIntsToFloats(intArray : int[], floatDivider : float) : float[] </td></tr>
<tr><td align="left" balign="left"> + convertByteToIntegers(byteArray : byte[]) : int[] </td></tr>
<tr><td align="left" balign="left"> + convertTwoByteToIntegers(byteArray : byte[]) : int[] </td></tr>
<tr><td align="left" balign="left"> + convertTwoBytesToShorts(byteArray : byte[]) : short[] </td></tr>
<tr><td align="left" balign="left"> + convertFourByteToIntegers(byteArray : byte[]) : int[] </td></tr>
<tr><td align="left" balign="left"> + combineIntegers(twoByteIntArray : int[], fourByteIntArray : int[]) : int[] </td></tr>
<tr><td align="left" balign="left"> + convertIntegerToChar(integerArray : int[]) : char[] </td></tr>
<tr><td align="left" balign="left"> + convertIntegersToBytes(intArray : int[]) : byte[] </td></tr>
<tr><td align="left" balign="left"> + convertIntegersToTwoBytes(intArray : int[]) : byte[] </td></tr>
<tr><td align="left" balign="left"> + convertShortsToTwoBytes(shortArray : short[]) : byte[] </td></tr>
<tr><td align="left" balign="left"> + convertIntegersToFourByte(intArray : int[]) : byte[] </td></tr>
<tr><td align="left" balign="left"> + convertFloatsToInts(floatArray : float[], floatMultiplier : float) : int[] </td></tr>
<tr><td align="left" balign="left"> + splitIntegers(inputArray : int[]) : List&lt;int&gt; </td></tr>
<tr><td align="left" balign="left"> + convertCharToIntegers(charArray : char[]) : int[] </td></tr>
<tr><td align="left" balign="left"> + encodeChainList(chainNames : String[], length : int) : byte[] </td></tr>
<tr><td align="left" balign="left"> + recursiveIndexEncode(in : int[]) : int[] </td></tr>
<tr><td align="left" balign="left"> + recursiveIndexDecode(in : int[]) : int[] </td></tr>
		</table></td></tr>
		</table>>, URL="./ArrayConverters.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

