#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.rcsb.mmtf.encoder.WriterUtils
	c237 [label=<<table title="org.rcsb.mmtf.encoder.WriterUtils" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WriterUtils.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> WriterUtils </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + WriterUtils() </td></tr>
<tr><td align="left" balign="left"> + writeDataToFile(writerToEncoder : AdapterToStructureData, path : Path) </td></tr>
<tr><td align="left" balign="left"> + getDataAsByteArr(writerToEncoder : AdapterToStructureData) : byte[] </td></tr>
<tr><td align="left" balign="left"> + gzipCompress(byteArray : byte[]) : byte[] </td></tr>
		</table></td></tr>
		</table>>, URL="./WriterUtils.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.rcsb.mmtf.encoder.SummaryData
	c238 [label=<<table title="org.rcsb.mmtf.encoder.SummaryData" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SummaryData.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SummaryData </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + numBonds : Integer </td></tr>
<tr><td align="left" balign="left"> + numAtoms : Integer </td></tr>
<tr><td align="left" balign="left"> + numGroups : Integer </td></tr>
<tr><td align="left" balign="left"> + numChains : Integer </td></tr>
<tr><td align="left" balign="left"> + numModels : Integer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SummaryData() </td></tr>
		</table></td></tr>
		</table>>, URL="./SummaryData.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.rcsb.mmtf.encoder.ReducedEncoder
	c239 [label=<<table title="org.rcsb.mmtf.encoder.ReducedEncoder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ReducedEncoder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ReducedEncoder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ReducedEncoder() </td></tr>
<tr><td align="left" balign="left"> + getReduced(structureDataInterface : StructureDataInterface) : StructureDataInterface </td></tr>
		</table></td></tr>
		</table>>, URL="./ReducedEncoder.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.rcsb.mmtf.encoder.GenericEncoder
	c240 [label=<<table title="org.rcsb.mmtf.encoder.GenericEncoder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GenericEncoder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GenericEncoder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GenericEncoder(structureDataInterface : StructureDataInterface) </td></tr>
<tr><td align="left" balign="left"> + GenericEncoder(structureDataInterface : StructureDataInterface, precision : int) </td></tr>
<tr><td align="left" balign="left"> + getMmtfEncodedStructure() : MmtfStructure </td></tr>
		</table></td></tr>
		</table>>, URL="./GenericEncoder.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.rcsb.mmtf.encoder.EncoderUtils
	c241 [label=<<table title="org.rcsb.mmtf.encoder.EncoderUtils" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EncoderUtils.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EncoderUtils </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + NULL_PARAM : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EncoderUtils() </td></tr>
<tr><td align="left" balign="left"> + generateGroupList(structureDataInterface : StructureDataInterface) : Group[] </td></tr>
<tr><td align="left" balign="left"> + generateBioassemblies(structureDataInterface : StructureDataInterface) : List&lt;BioAssemblyData&gt; </td></tr>
<tr><td align="left" balign="left"> + generateEntityList(structureDataInterface : StructureDataInterface) : Entity[] </td></tr>
<tr><td align="left" balign="left"> + getTypeFromChainId(structureDataInterface : StructureDataInterface, chainInd : int) : String </td></tr>
<tr><td align="left" balign="left"> + encodeByteArr(inputCodec : FloatCodecs, inputData : float[], param : int) : byte[] </td></tr>
<tr><td align="left" balign="left"> + encodeByteArr(inputCodec : IntCodecs, inputData : int[], param : int) : byte[] </td></tr>
<tr><td align="left" balign="left"> + encodeByteArr(inputCodec : CharCodecs, inputData : char[], param : int) : byte[] </td></tr>
<tr><td align="left" balign="left"> + encodeByteArr(inputCodec : StringCodecs, inputData : String[], param : int) : byte[] </td></tr>
<tr><td align="left" balign="left"> + transferBioassembly(structureDataInterface : StructureDataInterface, adapterToStructureData : AdapterToStructureData) </td></tr>
		</table></td></tr>
		</table>>, URL="./EncoderUtils.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.rcsb.mmtf.encoder.EncoderInterface
	c242 [label=<<table title="org.rcsb.mmtf.encoder.EncoderInterface" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EncoderInterface.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> EncoderInterface </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getMmtfEncodedStructure() : MmtfStructure </font></td></tr>
		</table></td></tr>
		</table>>, URL="./EncoderInterface.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.rcsb.mmtf.encoder.ArrayEncoders
	c243 [label=<<table title="org.rcsb.mmtf.encoder.ArrayEncoders" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ArrayEncoders.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ArrayEncoders </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ArrayEncoders() </td></tr>
<tr><td align="left" balign="left"> + deltaEncode(intArray : int[]) : int[] </td></tr>
<tr><td align="left" balign="left"> + runlengthEncode(intArray : int[]) : int[] </td></tr>
		</table></td></tr>
		</table>>, URL="./ArrayEncoders.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.rcsb.mmtf.encoder.AdapterToStructureData
	c244 [label=<<table title="org.rcsb.mmtf.encoder.AdapterToStructureData" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AdapterToStructureData.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AdapterToStructureData </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AdapterToStructureData() </td></tr>
<tr><td align="left" balign="left"> + getxCoords() : float[] </td></tr>
<tr><td align="left" balign="left"> + getyCoords() : float[] </td></tr>
<tr><td align="left" balign="left"> + getzCoords() : float[] </td></tr>
<tr><td align="left" balign="left"> + getbFactors() : float[] </td></tr>
<tr><td align="left" balign="left"> + getOccupancies() : float[] </td></tr>
<tr><td align="left" balign="left"> + getAtomIds() : int[] </td></tr>
<tr><td align="left" balign="left"> + getAltLocIds() : char[] </td></tr>
<tr><td align="left" balign="left"> + getInsCodes() : char[] </td></tr>
<tr><td align="left" balign="left"> + getGroupIds() : int[] </td></tr>
<tr><td align="left" balign="left"> + getGroupName(groupInd : int) : String </td></tr>
<tr><td align="left" balign="left"> + getNumAtomsInGroup(groupInd : int) : int </td></tr>
<tr><td align="left" balign="left"> + getGroupAtomNames(groupInd : int) : String[] </td></tr>
<tr><td align="left" balign="left"> + getGroupElementNames(groupInd : int) : String[] </td></tr>
<tr><td align="left" balign="left"> + getGroupBondOrders(groupInd : int) : int[] </td></tr>
<tr><td align="left" balign="left"> + getGroupBondIndices(groupInd : int) : int[] </td></tr>
<tr><td align="left" balign="left"> + getGroupAtomCharges(groupInd : int) : int[] </td></tr>
<tr><td align="left" balign="left"> + getGroupSingleLetterCode(groupInd : int) : char </td></tr>
<tr><td align="left" balign="left"> + getGroupChemCompType(groupInd : int) : String </td></tr>
<tr><td align="left" balign="left"> + getGroupTypeIndices() : int[] </td></tr>
<tr><td align="left" balign="left"> + getGroupSequenceIndices() : int[] </td></tr>
<tr><td align="left" balign="left"> + getChainIds() : String[] </td></tr>
<tr><td align="left" balign="left"> + getChainNames() : String[] </td></tr>
<tr><td align="left" balign="left"> + getChainsPerModel() : int[] </td></tr>
<tr><td align="left" balign="left"> + getGroupsPerChain() : int[] </td></tr>
<tr><td align="left" balign="left"> + getSpaceGroup() : String </td></tr>
<tr><td align="left" balign="left"> + getUnitCell() : float[] </td></tr>
<tr><td align="left" balign="left"> + getNumBioassemblies() : int </td></tr>
<tr><td align="left" balign="left"> + getNumTransInBioassembly(bioassemblyIndex : int) : int </td></tr>
<tr><td align="left" balign="left"> + getChainIndexListForTransform(bioassemblyIndex : int, transformationIndex : int) : int[] </td></tr>
<tr><td align="left" balign="left"> + getMatrixForTransform(bioassemblyIndex : int, transformationIndex : int) : double[] </td></tr>
<tr><td align="left" balign="left"> + getInterGroupBondIndices() : int[] </td></tr>
<tr><td align="left" balign="left"> + getInterGroupBondOrders() : int[] </td></tr>
<tr><td align="left" balign="left"> + getMmtfVersion() : String </td></tr>
<tr><td align="left" balign="left"> + getMmtfProducer() : String </td></tr>
<tr><td align="left" balign="left"> + getNumEntities() : int </td></tr>
<tr><td align="left" balign="left"> + getEntityDescription(entityInd : int) : String </td></tr>
<tr><td align="left" balign="left"> + getEntityType(entityInd : int) : String </td></tr>
<tr><td align="left" balign="left"> + getEntityChainIndexList(entityInd : int) : int[] </td></tr>
<tr><td align="left" balign="left"> + getEntitySequence(entityInd : int) : String </td></tr>
<tr><td align="left" balign="left"> + getStructureId() : String </td></tr>
<tr><td align="left" balign="left"> + getNumModels() : int </td></tr>
<tr><td align="left" balign="left"> + getNumChains() : int </td></tr>
<tr><td align="left" balign="left"> + getNumGroups() : int </td></tr>
<tr><td align="left" balign="left"> + getNumAtoms() : int </td></tr>
<tr><td align="left" balign="left"> + getRfree() : float </td></tr>
<tr><td align="left" balign="left"> + getRwork() : float </td></tr>
<tr><td align="left" balign="left"> + getResolution() : float </td></tr>
<tr><td align="left" balign="left"> + getTitle() : String </td></tr>
<tr><td align="left" balign="left"> + getExperimentalMethods() : String[] </td></tr>
<tr><td align="left" balign="left"> + getDepositionDate() : String </td></tr>
<tr><td align="left" balign="left"> + initStructure(totalNumBonds : int, totalNumAtoms : int, totalNumGroups : int, totalNumChains : int, totalNumModels : int, structureId : String) </td></tr>
<tr><td align="left" balign="left"> + finalizeStructure() </td></tr>
<tr><td align="left" balign="left"> + setModelInfo(modelId : int, chainCount : int) </td></tr>
<tr><td align="left" balign="left"> + setChainInfo(chainId : String, chainName : String, groupCount : int) </td></tr>
<tr><td align="left" balign="left"> + setEntityInfo(chainIndices : int[], sequence : String, description : String, title : String) </td></tr>
<tr><td align="left" balign="left"> + setGroupInfo(groupName : String, groupNumber : int, insertionCode : char, polymerType : String, atomCount : int, bondCount : int, singleAtomCode : char, sequenceIndex : int, secStructType : int) </td></tr>
<tr><td align="left" balign="left"> + setAtomInfo(atomName : String, serialNumber : int, alternativeLocationId : char, x : float, y : float, z : float, occupancy : float, temperatureFactor : float, element : String, charge : int) </td></tr>
<tr><td align="left" balign="left"> + setBioAssemblyTrans(bioAssemblyIndex : int, chainIndices : int[], transform : double[], name : String) </td></tr>
<tr><td align="left" balign="left"> + setXtalInfo(spaceGroup : String, unitCell : float[], ncsOperMatrixList : double[][]) </td></tr>
<tr><td align="left" balign="left"> + setGroupBond(firstAtomIndex : int, secondAtomIndex : int, bondOrder : int) </td></tr>
<tr><td align="left" balign="left"> + setInterGroupBond(firstAtomIndex : int, secondAtomIndex : int, bondOrder : int) </td></tr>
<tr><td align="left" balign="left"> + setHeaderInfo(rFree : float, rWork : float, resolution : float, title : String, depositionDate : String, releaseDate : String, experimnetalMethods : String[]) </td></tr>
<tr><td align="left" balign="left"> + getNumBonds() : int </td></tr>
<tr><td align="left" balign="left"> + getSecStructList() : int[] </td></tr>
<tr><td align="left" balign="left"> + getReleaseDate() : String </td></tr>
<tr><td align="left" balign="left"> + getNcsOperatorList() : double[][] </td></tr>
<tr><td align="left" balign="left"> + getBioassemblyName(bioassemblyIndex : int) : String </td></tr>
		</table></td></tr>
		</table>>, URL="./AdapterToStructureData.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//org.rcsb.mmtf.encoder.GenericEncoder implements org.rcsb.mmtf.encoder.EncoderInterface
	c242:p -> c240:p [dir=back,arrowtail=empty,style=dashed];
}

